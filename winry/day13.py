"""
爱德华老师学堂13：
2021.01.07
今天这两道题很适合考试的，我觉得有必要让你先看了 (￣▽￣)"

最近写python收到了福报，帮个产品做了个解析excel的工具，然后因为感激所以直接请我喝了个喜茶
心里真是美滋滋，果然不用钱的奶茶最好喝了
热的混波波奶茶，少糖，挺好喝，推荐了 (～￣▽￣)～

吃羊肉真是极其上火。。元旦吃了两次羊肉火锅，现在满脸痘痘 ╯︿╰
"""
# import this   # python这门语言的禅道，可以打开注释看看 :P 加上#号就是注释一行代码
print("============ let's get started ============")
# ============ let's get started ============

print("============ finish ============")

"""
每日答疑时间 =。=
因为没有基础语法教了，只能讲解题目了hhh
"""

"""
Q：
输入一个两位数字，分别输出它的个位数字和十位数字

A：
过于简单 =。= 把两位数，对10取余得到个位数，对10整除得到十位数

Q：
编写一个函数，其功能为求两个数的最大公约数

A：
很熟悉的题目啊。。这不就是day4的第一道题吗？！

Q：
编写一个函数，其功能为求两个数的最小公倍数

A：
是不是看着很熟悉？上一题是公约数，这题是公倍数 ~ ~
假设两数为 a ，b
其实可以在求出最大公约数的基础上，两数相乘除以最大公约数，得到最小公倍数
a * b / 最大公约数 = 最小公倍数
所以这题可以自己尝试写一下 ~ ~

Q：
计算并输出下面级数前n项（n=20）中奇数项的和。
1*2*3 - 2*3*4 + 3*4*5 + ... + (-1)^(n-1)*n*(n+1)*(n+2) + ... （其中，^表示幂运算）

A：
一看就是循环的题目，题目怎么说就怎么拼起来吧
"""
def calc_special(n):
    sum_up = 0
    content = ""
    for i in range(1, n + 1):   # 题目是从1到n，因此[1, n+1)
        sum_up += (-1)**(i-1) * i * (i+1) * (i+2)   # **就是进行幂运算的符号，还记得吗
        content += "(-1)^(%d)*%d*%d*%d + " % ((i-1), i, (i+1), (i+2))
    else:
        print("列表公式：P = %s = %s" % (content[0:-3], str(sum_up)))
        print("P的值为：%s" % (str(sum_up)))
        return sum_up

calc_special(20)

"""
Q：
计算sum = 1*2*3*...*10

A：
过于简单 =。= 累乘

Q：
计算并输出下面级数前n（假设n=50）项中所有奇数项的和
1*2 + 2*3 + 3*4 + 4*5 + ...+ n*(n+1) + ...

A：
跟上一道过于相似，甚至还没上一道难呢 hhh

Q：
设n=20，计算输出s(n)的值，要求结果保留5位小数
s(n) = (1*2)/(3*4) + (3*4)/(5*6) + (5*6)/(7*8) + ... + [(2n-1)*2n]/[(2n+1)*(2n+2)] + ...

A：
又是一道计算题，来感觉了=。= 其实我觉得题目真的好，毕竟都告诉你怎么模拟公式了[(2n-1)*2n]/[(2n+1)*(2n+2)]

"""
def calc_list(n):
    sum_up = 0
    content = ""
    for i in range(1, n+1):
        sum_up += (2*i-1)*(2*i)/(2*i+1)*(2*i+2)
        content += "(%d*%d)/(%d*%d) + " % ((2*i-1), (2*i), (2*i+1), (2*i+2))
    else:
        sum_up = round(sum_up, 5)   # round(浮点数, 保留位数) 这个函数可以确定浮点数保留几位小数
        print("列表公式：s(n) = %s = %s" % (content[0:-3], str(sum_up)))
        print("s(n)的值为：%s" % (str(sum_up)))
        return sum_up

calc_list(20)